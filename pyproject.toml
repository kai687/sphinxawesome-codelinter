[tool.poetry]
name = "sphinxawesome-codelinter"
version = "2.0.0"
description = "A Sphinx extension to pass reStructuredText code blocks to external tools."
license = "MIT"
readme = "README.md"
authors = ["Kai Welke <kai687@pm.me>"]
repository = "https://github.com/kai687/sphinxawesome-codelinter"
classifiers = [
  'Programming Language :: Python',
  'Framework :: Sphinx',
  'Framework :: Sphinx :: Extension',
  'Topic :: Documentation',
  'Topic :: Documentation :: Sphinx',
  'Topic :: Software Development :: Documentation'
]
packages = [
  { include = "sphinxawesome", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.8"
sphinx = ">4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2"
yamllint = "^1.28"
pytest-cov = "^4.0"
pre-commit = "^3.1.1"
coverage = {extras = ["toml"], version = "^7.2"}
black = "^23.1"
mypy = "^1.0"
typeguard = "^2.13.3"
safety = "^2.3.1"
types-docutils = "^0.19.1"
ruff = "^0.0.254"

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["sphinxawesome.codelinter"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
files = ["noxfile.py", "src/**/*.py", "tests/**/*.py"]
show_error_codes = true
show_error_context = true
pretty = true
strict = true
show_column_numbers = true
warn_unreachable = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["nox_poetry", "nox"]
ignore_missing_imports = true

[tool.ruff]
select = ["E", "F", "B", "Q", "W", "I", "C90", "D", "UP", "YTT", "S", "ANN", "SIM", "N"]
target-version = "py38"
ignore = ["ANN401", "D203", "D213"]
extend-exclude = ["*.pyi"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
